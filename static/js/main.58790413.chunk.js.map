{"version":3,"sources":["Todo.js","App.js","index.js"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","pt","px","pb","Todo","props","useState","done","setDone","React","open","setOpen","handleClose","className","onClick","parentCallback","item","Modal","hideBackdrop","onClose","Box","sx","id","Button","App","data","todo","setTodo","input","setInput","edit","setEdit","callbackFunction","childData","isEdit","console","log","fill","filter","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","variant","map","key","sort","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"waAOMA,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,GAAI,EACJC,GAAI,EACJC,GAAI,GAqDSC,MAlDf,SAAcC,GACZ,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,EAAwBC,IAAMH,UAAS,GAAvC,mBAAOI,EAAP,KAAaC,EAAb,KAIMC,EAAc,WAClBD,GAAQ,IAYV,OACE,sBAAKE,UAAU,OAAOC,QALG,WACzBT,EAAMU,eAAeV,EAAMW,MAAM,IAIjC,UACE,cAACC,EAAA,EAAD,CACEC,cAAY,EACZR,KAAMA,EACNS,QAASP,EACT,kBAAgB,oBAChB,mBAAiB,0BALnB,SAOE,eAACQ,EAAA,EAAD,CAAKC,GAAE,2BAAO7B,GAAP,IAAcK,MAAO,MAA5B,UACE,qBAAIyB,GAAG,oBAAP,iCAAgDjB,EAAMW,KAAtD,OAEA,cAACO,EAAA,EAAD,CAAQT,QAASF,EAAjB,mBACA,cAACW,EAAA,EAAD,CAAQT,QAtBO,WACrBT,EAAMU,eAAeV,EAAMW,MAAM,GACjCL,GAAQ,IAoBF,yBAGJ,mBACEG,QAAS,kBAAMN,GAASD,IACxBM,UAAWN,EAAO,yBAA2B,eAF/C,SAIGF,EAAMW,OAET,wBAAQH,UAAU,aAAaC,QAAS,kBAAMH,GAAQ,IAAtD,SACE,cAAC,IAAD,UCyBOa,MAnFf,WACE,MAAwBlB,mBAASmB,EAAKA,MAAtC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BrB,mBAAS,IAAnC,mBAAOsB,EAAP,KAAcC,EAAd,KACA,EAAwBvB,mBAAS,IAAjC,mBAAOwB,EAAP,KAAaC,EAAb,KAgBMC,EAAmB,SAACC,EAAWC,GAEnC,GADAC,QAAQC,IAAIV,GACPQ,EAMHL,EAASI,GACTF,EAAQE,OAPG,CACX,IAAMI,EAAOX,EAAKY,QAAO,SAACtB,GACxB,OAAOA,IAASiB,KAElBN,EAAQU,KAmBZ,OACE,sBAAKxB,UAAU,MAAf,UAEE,yBAAQA,UAAU,SAAlB,UACE,oBAAIA,UAAU,YAAd,0BACA,mBAAGA,UAAU,wBAAb,uEAGA,mBAAGA,UAAU,wBAAb,mDAGA,mBAAGA,UAAU,wBAAb,gEAKF,uBAAM0B,SAtDK,SAACC,GACdA,EAAEC,iBACY,KAAVb,GACFD,EAAQ,GAAD,mBAAKD,GAAL,CAAWE,KAClBC,EAAS,KAETa,MAAM,0BAERP,QAAQC,IAAIV,IA8CV,UACE,uBACEiB,KAAK,OACL9B,UAAU,aACV+B,YAAY,WACZC,MAAOjB,EACPkB,SAAU,SAACN,GAAD,OAAOX,EAASW,EAAEO,OAAOF,UAGrC,cAACtB,EAAA,EAAD,CAAQyB,QAAQ,YAAYlC,QApCf,SAAC0B,GAClBA,EAAEC,iBACFf,EAAKuB,KAAI,SAACjC,EAAMkC,GACVpB,IAASd,IACXU,EAAKwB,GAAOtB,EACZC,EAAS,KAEXF,EAAQD,MAEVM,KA2BI,SACE,cAAC,IAAD,SAIJ,qBAAKnB,UAAU,YAAf,SACGa,EAAKyB,OAAOF,KAAI,SAACjC,GAAD,OACf,cAAC,EAAD,CAAMA,KAAMA,EAAMD,eAAgBiB,aC9E5CoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.58790413.chunk.js","sourcesContent":["import CloseIcon from \"@mui/icons-material/Close\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Todo.css\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  pt: 2,\r\n  px: 4,\r\n  pb: 3,\r\n};\r\n\r\nfunction Todo(props) {\r\n  const [done, setDone] = useState(false);\r\n  // const [value, setValue] = useState(\"\");\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  // const handleOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCallback = () => {\r\n    props.parentCallback(props.item, false);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCallbackEdit = () => {\r\n    props.parentCallback(props.item, true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\" onClick={handleCallbackEdit}>\r\n      <Modal\r\n        hideBackdrop\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"child-modal-title\"\r\n        aria-describedby=\"child-modal-description\"\r\n      >\r\n        <Box sx={{ ...style, width: 300 }}>\r\n          <h2 id=\"child-modal-title\">Are you sure Delete {props.item}?</h2>\r\n\r\n          <Button onClick={handleClose}>Close</Button>\r\n          <Button onClick={handleCallback}>Delete</Button>\r\n        </Box>\r\n      </Modal>\r\n      <p\r\n        onClick={() => setDone(!done)}\r\n        className={done ? \"content-todo todo-done\" : \"content-todo\"}\r\n      >\r\n        {props.item}\r\n      </p>\r\n      <button className=\"btn-delete\" onClick={() => setOpen(true)}>\r\n        <CloseIcon />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import EditIcon from \"@mui/icons-material/Edit\";\nimport Button from \"@mui/material/Button\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport data from \"./data.json\";\nimport Todo from \"./Todo\";\n\nfunction App() {\n  const [todo, setTodo] = useState(data.data);\n  const [input, setInput] = useState(\"\");\n  const [edit, setEdit] = useState(\"\");\n\n  // add\n  const submit = (e) => {\n    e.preventDefault();\n    if (input !== \"\") {\n      setTodo([...todo, input]);\n      setInput(\"\");\n    } else {\n      alert(\"Please enter Todo List\");\n    }\n    console.log(todo);\n  };\n\n  // callback truyen item tu con -> cha\n\n  const callbackFunction = (childData, isEdit) => {\n    console.log(todo);\n    if (!isEdit) {\n      const fill = todo.filter((item) => {\n        return item !== childData;\n      });\n      setTodo(fill);\n    } else {\n      setInput(childData);\n      setEdit(childData);\n    }\n  };\n\n  // Edit\n  const handleEdit = (e) => {\n    e.preventDefault();\n    todo.map((item, key) => {\n      if (edit === item) {\n        todo[key] = input;\n        setInput(\"\");\n      }\n      setTodo(todo);\n    });\n    callbackFunction();\n  };\n  return (\n    <div className=\"App\">\n      {/**header */}\n      <header className=\"header\">\n        <h1 className=\"title-app\"> work to-dos</h1>\n        <p className=\"title-content color-1\">\n          Enter text into the input field to add items to your list\n        </p>\n        <p className=\"title-content color-2\">\n          Click the item to mark it as complete\n        </p>\n        <p className=\"title-content color-3\">\n          Click the \"X\" to remove the item from your list\n        </p>\n      </header>\n      {/**form input */}\n      <form onSubmit={submit}>\n        <input\n          type=\"text\"\n          className=\"input-item\"\n          placeholder=\"New item\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n        />\n\n        <Button variant=\"contained\" onClick={handleEdit}>\n          <EditIcon />\n        </Button>\n      </form>\n      {/**todo list */}\n      <div className=\"todo-list\">\n        {todo.sort().map((item) => (\n          <Todo item={item} parentCallback={callbackFunction} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}